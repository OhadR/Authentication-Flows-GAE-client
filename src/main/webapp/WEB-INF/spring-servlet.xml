<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/security 
							http://www.springframework.org/schema/security/spring-security-3.1.xsd
						http://www.springframework.org/schema/mvc
							http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:annotation-config />
	
    <context:property-placeholder location="classpath:client.properties" />

	<context:component-scan base-package="com.ohadr.dictionary" />
	<context:component-scan base-package="com.ohadr.auth_flows" />
	<context:component-scan base-package="com.ohadr.crypto" />
			

	<!-- The following is a must for Spring MVC JSON mapping. -->
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	
	
    <sec:http pattern="/login/**" security="none" />
    <sec:http pattern="/forgotPasswordPage" security="none" />
    <sec:http pattern="/forgotPassword" security="none" />
    <sec:http pattern="/createAccountPage" security="none" />
    <sec:http pattern="/createAccount" security="none" />


	<sec:http authentication-manager-ref="authenticationManager">
		<sec:intercept-url pattern="/secure/**" access="ROLE_USER" />
		<sec:anonymous/>

		<sec:form-login 
			login-page="/login/login.htm" 
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-url="/login/login.htm?login_error=1" />

        <!-- sec:remember-me 
			data-source-ref="dataSource"
			user-service-ref="userDetailsService"/-->

        
	</sec:http>
	
	

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider user-service-ref="userDetailsService" >
			<sec:password-encoder hash="sha-256">
				<sec:salt-source user-property="username"/>
			</sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>		

	<bean id="passwordEncoder" 	class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256"/>
	</bean>	
	
	<!-- decide how you wanna work: in-mem repo, or jdbc impl: -->
    <!-- bean class="com.ohadr.auth_flows.mocks.InMemoryAuthenticationAccountRepositoryImpl" / -->
    <!-- bean id="userDetailsService" class="com.ohadr.auth_flows.core.jdbc.JdbcAuthenticationAccountRepositoryImpl" /-->
    <bean id="userDetailsService" class="com.ohadr.dictionary.gae.GAEAuthenticationAccountRepositoryImpl" />

    <!--bean class="com.ohadr.auth_flows.core.jdbc.JdbcAuthenticationPolicyRepositoryImpl" /-->
    <bean class="com.ohadr.auth_flows.mocks.MockAuthenticationPolicyRepositoryImpl" />
        
    <!-- data-source - ->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.jamonapi.proxy.JAMonDriver"/>
        <property name="jdbcUrl"
                  value="jdbc:jamon:mysql://${com.ohadr.oauth2.db.host}:${com.ohadr.oauth2.db.port}/${com.ohadr.oauth2.db.schema}?jamonrealdriver=org.gjt.mm.mysql.Driver;useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="user" value="${com.ohadr.oauth2.db.username}"/>
        <property name="password" value="${com.ohadr.oauth2.db.password}"/>
        <property name="acquireIncrement" value="1"/>
        <property name="idleConnectionTestPeriod" value="100"/>
        <property name="maxPoolSize" value="10"/>
        <property name="maxStatements" value="5"/>
        <property name="minPoolSize" value="5"/>
    </bean-->
			

	<bean id="mailSender" class="com.ohadr.dictionary.gae.GAEMailSenderImpl" />

	
	
</beans>
